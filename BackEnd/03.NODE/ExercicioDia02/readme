Projeto de desenvolvimento de CRUD em NODE.

O projeto Ã© apresentado em 10 requisitos que devem ser desenvolvidos utilizando uma array de objetos que estÃ¡ no './src/movies.json'.

Os desafios sÃ£o:

Desafio 1
Qual Ã© a funÃ§Ã£o do cÃ³digo de status 400 e 422?
 - status 400, o servidor nÃ£o irÃ¡ processar a requisiÃ§Ã£o devido a alguma coisa que foi entendida como um erro do cliente.
 - status 422, o servidor entende o tipo de conteÃºdo da entidade da requisiÃ§Ã£o, e a sintaxe da requisiÃ§Ã£o esta correta, mas nÃ£o foi possÃ­vel processar as instruÃ§Ãµes presentes.

Desafio 2
Qual Ã© a funÃ§Ã£o do cÃ³digo de status 401?
 - O Erro 401 indica um problema nas credenciais de acesso Ã  pÃ¡gina.

ğŸš€ Desafio 3
Crie um servidor Node.js utilizando o framework Express.

ğŸš€ Desafio 4
Crie uma funÃ§Ã£o de leitura do JSON com o modulo fs.

ğŸš€ Desafio 5
Crie um endpoint do tipo GET com a rota /movies/:id, que possa listar um filme do JSON por id.

ğŸš€ Desafio 6
Crie um endpoint do tipo GET com a rota /movies, que possa listar todos os filmes do JSON.

ğŸš€ Desafio 7
Crie um endpoint do tipo POST com a rota /movies, para cadastrar um novo filme no JSON.
O corpo da requisiÃ§Ã£o deve receber o seguinte formato:
{
  "movie": "Vingadores",
  "price": 5
}

ğŸš€ ExercÃ­cio 8
Crie um endpoint do tipo PUT com a rota /movies/:id, que possa editar informaÃ§Ãµes de um filme do JSON.
O corpo da requisiÃ§Ã£o deve receber o seguinte formato:
{
  "movie": "Vingadores: Ultimato",
  "price": 5
}

ğŸš€ ExercÃ­cio 9
Crie um endpoint do tipo DELETE com a rota /movies/:id que possa deletar um filme do JSON.